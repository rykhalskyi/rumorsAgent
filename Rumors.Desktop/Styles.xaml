<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

   
    <Style x:Key="BigBlueButton" TargetType="Button">
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="Background" Value="#0085FF" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="#ccc" 
                            BorderThickness="0,0,0,0" >
                        <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#43A5FF"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#0085FF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#C7C7C7"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BigWhiteButton"
           TargetType="Button"
           BasedOn="{StaticResource BigBlueButton}">
        <Setter Property="Background" Value="#F8F8F8"/>
        <Setter Property="Foreground" Value="#666666"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#F8F8F8"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <SolidColorBrush x:Key="BackgroundBrush" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="TransparentBackgroundBrush" Color="#CCF0F0F0"/>
    <SolidColorBrush x:Key="FaceBrush" Color="#FAFAFA"/>
    <SolidColorBrush x:Key="BorderBrush" Color="#C2C2C2"/>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                          Width="10"
                          Height="13"
                          Background="Transparent">
                        <Path 
                    x:Name="ExpandPath"
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center" 
                    Margin="1,1,1,1"
                    Fill="Gray"
                    Data="M 4 0 L 8 4 L 4 8 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                 StrokeThickness="5"
                 Stroke="Black"
                 StrokeDashArray="1 2"
                 Opacity="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProjectTreeViewItem" TargetType="TreeViewItem">
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,
                                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,
                                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
                Value="1,0,0,0"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <!--<convertors:LeftMarginMultiplierConverter Length="19" x:Key="lengthConverter" />-->
                    </ControlTemplate.Resources>
                    <StackPanel>
                        <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Grid Margin="{Binding Converter={StaticResource lengthConverter},
                              RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander"
                                              Style="{StaticResource ExpandCollapseToggleStyle}"
                                              IsChecked="{Binding Path=IsExpanded,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>

                                <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  Margin="-14,0,0,0"
                                                  IsHitTestVisible="False"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                                           Value="false"/>
                                <Condition Property="Width"
                                           Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                    Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                                            Value="false"/>
                                <Condition Property="Height"
                                            Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" 
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem" x:Key="LogListViewItem">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" 
                                    Grid.Row="0"
                                Visibility="{Binding HasVersion, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="{Binding Log.CreatedAt}" 
                                   FontWeight="Bold" 
                                   FontSize="12"
                                   VerticalAlignment="Center"/>
                            <Border Margin="6,0,0,0"
                                    MinWidth="200"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="4">
                                <StackPanel Orientation="Horizontal"
                                            Margin="4">
                                    <Image MaxHeight="60"
                                           MaxWidth="120"
                                           Source="{Binding BitmapSource}"/>

                                    <TextBlock Text="{Binding Log.Version.Name}"
                                               Margin="10,0"
                                               VerticalAlignment="Center"/>
                                </StackPanel>
                            </Border>

                            <Border Height="60"
                                Width="200"
                                Margin="6,0"
                                CornerRadius="4"
                                Background="{Binding Log.Status.RgbColor, Converter={StaticResource StringToSolidColorBrushConverter}}">
                                <StackPanel Orientation="Vertical"
                                            VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Log.Status.Name}"
                                               FontWeight="DemiBold"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"/>
                                    <TextBlock HorizontalAlignment="Center">
                                       <Run Text="set by"/>
                                       <Run Text="{Binding Log.Person.Name}"/>      
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                            <TextBox Text="{Binding Log.Message}"
                                     BorderBrush="Transparent"
                                     Background="Transparent"
                                     IsReadOnly="True"
                                     Margin="0,0"
                                    VerticalAlignment="Center"/>


                        </StackPanel>

                        <StackPanel Orientation="Horizontal" 
                                    Grid.Row="0"
                                    Visibility="{Binding HasVersion, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                            
                            <TextBlock Text="{Binding Log.CreatedAt}" 
                                       FontWeight="Bold" 
                                       FontSize="12"
                                       VerticalAlignment="Center"/>
                            <Border MinWidth="208"></Border>
                            <Border Height="60"
                                    Width="200"
                                    Margin="6,0"
                                    CornerRadius="4"
                                    Background="{Binding Log.Status.RgbColor, Converter={StaticResource StringToSolidColorBrushConverter}}">
                                <StackPanel Orientation="Vertical"
                                            VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Log.Status.Name}"
                                               FontWeight="DemiBold"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"/>
                                    <TextBlock HorizontalAlignment="Center">
                                               <Run Text="set by"/>
                                               <Run Text="{Binding Log.Person.Name}"/>
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                            <TextBox Text="{Binding Log.Message}"
                                     BorderBrush="Transparent"
                                     Background="Transparent"
                                     IsReadOnly="True"
                                     Margin="0,0"
                                     VerticalAlignment="Center"/>


                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#f2fbff"/>
                <!-- Alternate background color -->
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="White"/>
                <!-- Default background color -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PersonFieldListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderBrush="Gray" BorderThickness="0,0,0,1" Padding="5">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Comment}"
                                       Margin="0,0,6,0"/>
                            <TextBlock Text="{Binding Person.Name}"
                                       FontWeight="DemiBold"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>